import kotlin.Boolean;

CREATE TABLE scrobble (
    id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    trackId INTEGER NOT NULL,
    listenedAt INTEGER NOT NULL,
    savedRemote INTEGER AS Boolean DEFAULT 0,
    UNIQUE (trackId, listenedAt),
    FOREIGN KEY (trackId) REFERENCES track(id) ON DELETE CASCADE
);

getScrobblesCount:
SELECT COUNT(id) FROM scrobble WHERE savedRemote = 1;

insert:
INSERT OR IGNORE INTO scrobble(trackId, listenedAt, savedRemote)
VALUES (:trackId, :listenedAt, :savedRemote);

deleteRemote:
DELETE FROM scrobble WHERE savedRemote = 1;

scrobbleData:
SELECT
    s.listenedAt,
    s.savedRemote,
    t.loved,
    t.name AS track,
    ar.name AS artist,
    al.name AS album,
    al.lowArtwork
FROM scrobble s
LEFT JOIN track t ON s.trackId = t.id
LEFT JOIN album al ON t.albumId = al.id
LEFT JOIN artist ar ON t.artistId = ar.id
ORDER BY s.listenedAt DESC;